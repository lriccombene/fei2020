<?php

namespace app\modules\apv1\models;

use yii\data\ActiveDataProvider;

class DictamentecnicoSearch extends \app\models\Dictamentecnico
{

    public function fields()
    {
        return parent::fields(); // TODO: Change the autogenerated stub
    }
//    public function fields()
//    {
//        return ['id','title','comments']; // TODO: Change the autogenerated stub
//    }

    public $categoria;
    public $empresa;
    public $yacicmiento;
    public $area;
    public $tipodictamen;
    public $tipotrabajo;
    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id'], 'integer'],
            [['id','fec','nro','categoria','empresa','area','yacimiento','tipodictamen','tipotrabajo','detalle',
            'longitud','latitud'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
//    public function scenarios()
//    {
//        // bypass scenarios() implementation in the parent class
//        return Model::scenarios();
//    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = Dictamentecnico::find();
        $query->leftJoin('area','dictamentecnico.id_area = area.id');
        $query->leftJoin('categoria','dictamentecnico.id_categoria = categoria.id');
       /* $query->joinWith(['Dicatmentecnico','categoria']);
        $query->joinWith(['Dicatmentecnico','empresa']);

        $query->joinWith('yacimiento');
        $query->joinWith('tipodictamen');
        $query->joinWith('tipotrabajo');
*/
        // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params,'');

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
           return $dataProvider;
       }

        // grid filtering conditions
        $query->andFilterWhere([
            'id' => $this->id,

        ]);

        $query->andFilterWhere(['like', 'fec', $this->fec])
            ->andFilterWhere(['like', 'nro', $this->nro]);
        
        $query->andFilterWhere(['like','categoria.nombre',$this->categoria]);
        $query->andFilterWhere(['like','area.nombre',$this->area]);
        return $dataProvider;
    }
}