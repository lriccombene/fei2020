<?php

namespace app\modules\apv1\models;

use yii\data\ActiveDataProvider;

/**
 * PostSearch represents the model behind the search form of `app\models\Post`.
 */
class ActasinspeccionSearch extends \app\modules\apv1\models\Actasinspeccion
{

    //propiedades que se declaran para que funcione los filtrods de la grilla

    public $localidad;
    public $categoria;
    public $motivo;
    public $empresa;
    public $area;

    public function fields()
    {
        return parent::fields(); // TODO: Change the autogenerated stub
    }
//    public function fields()
//    {
//        return ['id','title','comments']; // TODO: Change the autogenerated stub
//    }


    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id', ], 'integer'],
            [['localidad', 'fec','nro','categoria','motivo','empresa','area',], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
//    public function scenarios()
//    {
//        // bypass scenarios() implementation in the parent class
//        return Model::scenarios();
//    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        //relaciono las tablas de la grilla para buscar la propiedades
        $query = Actasinspeccion::find();
        $query->leftJoin('localidad','actasinspeccion.id_localidad = localidad.id');
        $query->leftJoin('categoria','actasinspeccion.id_categoria = categoria.id');
        $query->leftJoin('motivo','actasinspeccion.id_motivo = motivo.id');
        $query->leftJoin('empresa','actasinspeccion.id_empresa = empresa.id');
        $query->leftJoin('area','actasinspeccion.id_area = area.id');


        // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params,'');

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // grid filtering conditions
        $query->andFilterWhere([
            'id' => $this->id,
            'nro' => $this->nro,
            'fec' => $this->fec,

            'latitud' => $this->latitud,
            'longitud' => $this->longitud,
        ]);
        //armo el where del quey para que funcione los filtros

        $query->andFilterWhere(['like','localidad.nombre',$this->localidad]);
        $query->andFilterWhere(['like','categoria.nombre',$this->categoria]);
        $query->andFilterWhere(['like','motivo.nombre',$this->motivo]);
        $query->andFilterWhere(['like','empresa.nombre',$this->empresa]);
        $query->andFilterWhere(['like','area.nombre',$this->area]);


        return $dataProvider;
    }
}